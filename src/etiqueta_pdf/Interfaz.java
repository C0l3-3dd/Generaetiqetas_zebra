/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package etiqueta_pdf;

import java.awt.FileDialog;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFSheet ;
import com.itextpdf.io.font.constants.StandardFonts;
import com.itextpdf.kernel.font.PdfFont;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.geom.PageSize;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.borders.Border;
import com.itextpdf.layout.element.AreaBreak;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.property.AreaBreakType;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author edd_g
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCalendar1 = new com.toedter.calendar.JCalendar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        chk_enbarque = new javax.swing.JCheckBox();
        chk_pedido_1 = new javax.swing.JCheckBox();
        chk_pedido_2 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Generador de Etiquetas");
        setIconImage(getIconImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Fecha:");

        jLabel2.setText("Pedido:");

        jLabel3.setText("Seleccione el archvivo:");

        jLabel4.setText("Ruta de destino:");

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Crear Archivos");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Cerrar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        chk_enbarque.setText("10x15");
        chk_enbarque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_enbarqueActionPerformed(evt);
            }
        });

        chk_pedido_1.setText("3x3x2");
        chk_pedido_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_pedido_1ActionPerformed(evt);
            }
        });

        chk_pedido_2.setText("3x3x3");
        chk_pedido_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_pedido_2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1))
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(chk_enbarque)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chk_pedido_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chk_pedido_2)))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chk_enbarque)
                    .addComponent(chk_pedido_1)
                    .addComponent(chk_pedido_2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    @Override
    public Image getIconImage()
    {
        Image retVale = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Images/logo.png"));
        return retVale;
    }
    private static final String URL = "jdbc:mysql://192.168.1.67:3306/empresas_csp";
    private static final String USER = "csp";
    private static final String CLAVE = "CSP_Textil";
    String ruta="";
    private Connection conexion()
    {
        Connection con = null;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            con =  DriverManager.getConnection(URL, USER, CLAVE);
        }catch(Exception e )
        {
            System.out.println("Error: " + e.getMessage()+" Conexion.java");
        }
        return con;
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      FileDialog dialog = new FileDialog(this, "Buscar Xlsx", FileDialog.LOAD);
      dialog.setFile("*.xlsx");
      dialog.setVisible(true);
      ruta = dialog.getDirectory() + dialog.getFile();
      jTextField2.setText(ruta);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Date date = jDateChooser1.getDate();
        SimpleDateFormat  dtf = new SimpleDateFormat("dd/MM/YYY");
        Connection con;
        try
        {
            int count_Row = 0 ;
            FileInputStream archivo = new FileInputStream(new File(ruta));
            XSSFWorkbook archivoLectura = new XSSFWorkbook(archivo);
            XSSFSheet hojadata = archivoLectura.getSheetAt(0);
            //System.out.println(hojadata.getLastRowNum());
            
            Row fila;
            Cell v2 ;
            
            for (int i = 2; i < hojadata.getLastRowNum(); i++) 
            {
                fila = hojadata.getRow(i);
                v2 = fila.getCell(0);
                if (v2 != null && !v2.getCellTypeEnum().toString().equals("BLANK")) {
                    //System.out.println(v2.getCellTypeEnum().toString());
                    count_Row++;
                }else
                    break;
            }
            //System.out.println(count_Row);
            
            fila = hojadata.getRow(0);
            int count_cell = 3;
            Cell v1 = fila.getCell(count_cell);

            while(v1 != null)
            {
                count_cell++;
                v1 = fila.getCell(count_cell); 
            }
            count_cell = count_cell -5;
            String[] codigos = new String[count_cell];
            String[] modelos = new String[count_cell];
            v1 = fila.getCell(3);

                for(int i = 0; i < 2 ;i++)
                {
                    fila = hojadata.getRow(i);

                    for(int j = 3 ; j < count_cell+3;j++)
                    {
                        v1 = fila.getCell(j);
                        if( v1.getCellTypeEnum().toString().equals("BLANK"))
                        {
                          if(i == 0)
                          {
                              codigos[j-3] = "-";
                          }
                          else
                          {
                              modelos[j-3] = "-";
                          }
                        }
                        if( v1.getCellTypeEnum().toString().equals("STRING") )
                        {
                          if(i == 0)
                          {
                              codigos[j-3] = v1.getStringCellValue();
                          }
                          else
                          {
                              modelos[j-3] = v1.getStringCellValue();
                          }
                        }
                        if( v1.getCellTypeEnum().toString().equals("NUMERIC") )
                        {
                          if(i == 0)
                          {
                              codigos[j-3] = Long.toString( new Double(v1.getNumericCellValue()).longValue() );
                          }
                          else
                          {
                             modelos[j-3] = Long.toString( new Double(v1.getNumericCellValue()).longValue() );
                          }
                        }
                    }
                }
        
    
            Cell cel_0;
            Cell cel_1;
            Cell cel_2;
            Cell aux;
            int[] cajas = new int[count_Row];
            int[] tiendas = new int[count_Row];
            int[] n_cajas = new int[count_Row];
            int [][] datos = new int[count_Row][count_cell];
            int [][] piezas = new int[count_Row][count_cell];
            for(int i = 0; i < count_Row;i++)
            {
                fila = hojadata.getRow(i+2);
                cel_0 = fila.getCell(0);
                cel_1 = fila.getCell(1);
                cel_2 = fila.getCell(2);

                cajas[i] = (int)cel_0.getNumericCellValue();
                tiendas[i] = (int)cel_1.getNumericCellValue();
                n_cajas[i] = (int)cel_2.getNumericCellValue();
                for(int j = 0 ; j < count_cell; j++)
                {
                    aux = fila.getCell(j+3);
                    if((int)aux.getNumericCellValue() != 0)
                    {
                        datos[i][j] = j;
                        piezas[i][j] = (int)aux.getNumericCellValue();
                    }
                    else 
                    {
                        datos[i][j] = -1;
                         piezas[i][j] = -1;
                    }
                }
            }

            int count = 0;
            int[] cajas_completo = new int[ count_Row *count_cell ];
            int[] tienda_completo = new int[ count_Row *count_cell ];
            int[] piezas_completo = new int[ count_Row *count_cell ];
            String[] codigos_completo = new String[ count_Row *count_cell ];
            String[] modelos_completo = new String[ count_Row *count_cell ];
            for(int i = 0 ; i < count_Row;i++ )
            {
                for(int j = 0; j <count_cell ;j++)
                {
                    if(datos[i][j] != -1)
                    {
                        cajas_completo[count] = cajas[i];
                        tienda_completo[count] = tiendas[i];
                        codigos_completo[count] = codigos[ datos[i][j] ];
                        modelos_completo[count] = modelos[ datos[i][j] ];
                        piezas_completo[count] = piezas[i][j];
                        count++;
                    }
                }
            }
//**********************************************************************************************

    if(this.chk_pedido_1.isSelected())
    {
        
        PdfDocument pdf = new PdfDocument(new PdfWriter(jTextField3.getText()+"_Etiqueta_3x3x2.pdf"));
        Document document = new Document(pdf,new PageSize(199.5f, 85.5f));
        document.setMargins(0, 3.125f, 0, 3);

        if( count % 2 == 0 )
        {
            for(int i = 0 ; i <  count; i=i+2)
            {
                Paragraph codigo = new Paragraph(codigos_completo[i]);
                Paragraph modelo = new Paragraph(modelos_completo[i]);
                Paragraph tienda = new Paragraph("T - "+tienda_completo[i]);
                Paragraph caja = new Paragraph("P - "+piezas_completo[i]);

                Paragraph codigo2 = new Paragraph(codigos_completo[i+1]);
                Paragraph modelo2 = new Paragraph(modelos_completo[i +1]);
                Paragraph tienda2 = new Paragraph("T - "+tienda_completo[i+1]);
                Paragraph caja2 = new Paragraph("P - "+piezas_completo[i+1]);

                codigo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                modelo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                tienda.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                caja.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);

                codigo2.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                modelo2.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                tienda2.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                caja2.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);

                codigo.setRelativePosition(0, 8, 0, 0);
                modelo.setRelativePosition(40, -3, 0, 0);
                tienda.setRelativePosition(0, 30, 0, 0);
                caja.setRelativePosition(0,60,0,0);

                codigo2.setRelativePosition(105f, -3, 0, 0);
                modelo2.setRelativePosition(140, -3, 0, 0);
                tienda2.setRelativePosition(105f, 30, 0, 0);
                caja2.setRelativePosition(105f,60,0,0);

                document.add(codigo);
                document.add(modelo);
                document.add(tienda);
                document.add(caja);

                document.add(codigo2);
                document.add(modelo2);
                document.add(tienda2);
                document.add(caja2);
                document.add(new AreaBreak(AreaBreakType.NEXT_PAGE));

            }
            document.close();        
        }
        else
        {
            for(int i = 0 ; i < count-1; i=i+2)
            {
                Paragraph codigo = new Paragraph(codigos_completo[i]);
                Paragraph modelo = new Paragraph(modelos_completo[i]);
                Paragraph tienda = new Paragraph("T - "+tienda_completo[i]);
                Paragraph caja = new Paragraph("P - "+piezas_completo[i]);

                Paragraph codigo2 = new Paragraph(codigos_completo[i+1]);
                Paragraph modelo2 = new Paragraph(modelos_completo[i +1]);
                Paragraph tienda2 = new Paragraph("T - "+tienda_completo[i+1]);
                Paragraph caja2 = new Paragraph("P - "+piezas_completo[i+1]);

                codigo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                modelo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                tienda.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                caja.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);

                codigo2.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                modelo2.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                tienda2.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                caja2.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);

                codigo.setRelativePosition(0, 8, 0, 0);
                modelo.setRelativePosition(40, -3, 0, 0);
                tienda.setRelativePosition(0, 30, 0, 0);
                caja.setRelativePosition(0,60,0,0);

                codigo2.setRelativePosition(105f, -3, 0, 0);
                modelo2.setRelativePosition(140, -3, 0, 0);
                tienda2.setRelativePosition(105f, 30, 0, 0);
                caja2.setRelativePosition(105f,60,0,0);

                document.add(codigo);
                document.add(modelo);
                document.add(tienda);
                document.add(caja);

                document.add(codigo2);
                document.add(modelo2);
                document.add(tienda2);
                document.add(caja2);
                document.add(new AreaBreak(AreaBreakType.NEXT_PAGE));   
            }

            Paragraph codigo = new Paragraph(codigos_completo[count-1]);
            Paragraph modelo = new Paragraph(modelos_completo[count-1]);
            Paragraph tienda = new Paragraph("T - "+tienda_completo[count-1]);
            Paragraph caja = new Paragraph("P - "+piezas_completo[count-1]);
            codigo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
            modelo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
            tienda.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
            caja.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
            codigo.setRelativePosition(0, 8, 0, 0);
            modelo.setRelativePosition(40, -3, 0, 0);
            tienda.setRelativePosition(0, 30, 0, 0);
            caja.setRelativePosition(0,60,0,0);
            document.add(codigo);
            document.add(modelo);
            document.add(tienda);
            document.add(caja);

            document.close();
        }
        
    }
    
//****************************************************************************************
    if(this.chk_pedido_2.isSelected())
    {
        PdfDocument pdf_3 = new PdfDocument(new PdfWriter(jTextField3.getText()+"_Etiqueta_3x3x3.pdf"));
        Document document_3 = new Document(pdf_3,new PageSize(312f, 85.5f));
        document_3.setMargins(0, 3.125f, 0, 3);
        
        if(count % 3 == 0 )
        {
            for(int i = 0 ; i <  count; i=i+3)
            {
                
                Paragraph codigo = new Paragraph(codigos_completo[i]);
                Paragraph modelo = new Paragraph(modelos_completo[i]);
                Paragraph tienda = new Paragraph("T - "+tienda_completo[i]);
                Paragraph caja = new Paragraph("P - "+piezas_completo[i]);

                Paragraph codigo2 = new Paragraph(codigos_completo[i+1]);
                Paragraph modelo2 = new Paragraph(modelos_completo[i +1]);
                Paragraph tienda2 = new Paragraph("T - "+tienda_completo[i+1]);
                Paragraph caja2 = new Paragraph("P - "+piezas_completo[i+1]);
                
                Paragraph codigo3 = new Paragraph(codigos_completo[i+2]);
                Paragraph modelo3 = new Paragraph(modelos_completo[i +2]);
                Paragraph tienda3 = new Paragraph("T - "+tienda_completo[i+2]);
                Paragraph caja3 = new Paragraph("P - "+piezas_completo[i+2]);
    
                codigo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                modelo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                tienda.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                caja.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
    
                codigo2.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                modelo2.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                tienda2.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                caja2.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                
                codigo3.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                modelo3.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                tienda3.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                caja3.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
    
                codigo.setRelativePosition(0, 8, 0, 0);
                modelo.setRelativePosition(40, -3, 0, 0);
                tienda.setRelativePosition(0, 30, 0, 0);
                caja.setRelativePosition(0,60,0,0);
    
                codigo2.setRelativePosition(110f, -3, 0, 0);
                modelo2.setRelativePosition(150, -3, 0, 0);
                tienda2.setRelativePosition(105f, 30, 0, 0);
                caja2.setRelativePosition(105f,60,0,0);
                
                codigo3.setRelativePosition(220f, -3, 0, 0);
                modelo3.setRelativePosition(250, -3, 0, 0);
                tienda3.setRelativePosition(210f, 30, 0, 0);
                caja3.setRelativePosition(210f,60,0,0);
    
                document_3.add(codigo);
                document_3.add(modelo);
                document_3.add(tienda);
                document_3.add(caja);
    
                document_3.add(codigo2);
                document_3.add(modelo2);
                document_3.add(tienda2);
                document_3.add(caja2);
                
                document_3.add(codigo3);
                document_3.add(modelo3);
                document_3.add(tienda3);
                document_3.add(caja3);
                
                document_3.add(new AreaBreak(AreaBreakType.NEXT_PAGE));
                
            }
                document_3.close();
        }
        else if( count % 3 == 2)
        {
            
            for(int i = 0 ; i <  count-2; i=i+3)
            {
                
                Paragraph codigo = new Paragraph(codigos_completo[i]);
                Paragraph modelo = new Paragraph(modelos_completo[i]);
                Paragraph tienda = new Paragraph("T - "+tienda_completo[i]);
                Paragraph caja = new Paragraph("P - "+piezas_completo[i]);

                Paragraph codigo2 = new Paragraph(codigos_completo[i+1]);
                Paragraph modelo2 = new Paragraph(modelos_completo[i +1]);
                Paragraph tienda2 = new Paragraph("T - "+tienda_completo[i+1]);
                Paragraph caja2 = new Paragraph("P - "+piezas_completo[i+1]);
                
                Paragraph codigo3 = new Paragraph(codigos_completo[i+2]);
                Paragraph modelo3 = new Paragraph(modelos_completo[i +2]);
                Paragraph tienda3 = new Paragraph("T - "+tienda_completo[i+2]);
                Paragraph caja3 = new Paragraph("P - "+piezas_completo[i+2]);
    
                codigo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                modelo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                tienda.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                caja.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
    
                codigo2.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                modelo2.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                tienda2.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                caja2.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                
                codigo3.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                modelo3.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                tienda3.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                caja3.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
    
                codigo.setRelativePosition(0, 8, 0, 0);
                modelo.setRelativePosition(40, -3, 0, 0);
                tienda.setRelativePosition(0, 30, 0, 0);
                caja.setRelativePosition(0,60,0,0);
    
                codigo2.setRelativePosition(110f, -3, 0, 0);
                modelo2.setRelativePosition(150, -3, 0, 0);
                tienda2.setRelativePosition(105f, 30, 0, 0);
                caja2.setRelativePosition(105f,60,0,0);
                
                codigo3.setRelativePosition(220f, -3, 0, 0);
                modelo3.setRelativePosition(250, -3, 0, 0);
                tienda3.setRelativePosition(210f, 30, 0, 0);
                caja3.setRelativePosition(210f,60,0,0);
    
                document_3.add(codigo);
                document_3.add(modelo);
                document_3.add(tienda);
                document_3.add(caja);
    
                document_3.add(codigo2);
                document_3.add(modelo2);
                document_3.add(tienda2);
                document_3.add(caja2);
                
                document_3.add(codigo3);
                document_3.add(modelo3);
                document_3.add(tienda3);
                document_3.add(caja3);
                
                document_3.add(new AreaBreak(AreaBreakType.NEXT_PAGE));
                
            }
            
            Paragraph codigo = new Paragraph(codigos_completo[count-2]);
            Paragraph modelo = new Paragraph(modelos_completo[count-2]);
            Paragraph tienda = new Paragraph("T - "+tienda_completo[count-2]);
            Paragraph caja = new Paragraph("P - "+piezas_completo[count-2]);

            Paragraph codigo2 = new Paragraph(codigos_completo[count-1]);
            Paragraph modelo2 = new Paragraph(modelos_completo[count-1]);
            Paragraph tienda2 = new Paragraph("T - "+tienda_completo[count-1]);
            Paragraph caja2 = new Paragraph("P - "+piezas_completo[count-1]);
            
            codigo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
            modelo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
            tienda.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
            caja.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);

            codigo2.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
            modelo2.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
            tienda2.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
            caja2.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
            
            codigo.setRelativePosition(0, 8, 0, 0);
            modelo.setRelativePosition(40, -3, 0, 0);
            tienda.setRelativePosition(0, 30, 0, 0);
            caja.setRelativePosition(0,60,0,0);

            codigo2.setRelativePosition(110f, -3, 0, 0);
            modelo2.setRelativePosition(150, -3, 0, 0);
            tienda2.setRelativePosition(105f, 30, 0, 0);
            caja2.setRelativePosition(105f,60,0,0);
            
            document_3.add(codigo);
            document_3.add(modelo);
            document_3.add(tienda);
            document_3.add(caja);

            document_3.add(codigo2);
            document_3.add(modelo2);
            document_3.add(tienda2);
            document_3.add(caja2);
            
            document_3.close();
            
        }
        else if(count % 3 == 1)
        {
            
            for(int i = 0 ; i <  count-1; i=i+3)
            {
                
                Paragraph codigo = new Paragraph(codigos_completo[i]);
                Paragraph modelo = new Paragraph(modelos_completo[i]);
                Paragraph tienda = new Paragraph("T - "+tienda_completo[i]);
                Paragraph caja = new Paragraph("P - "+piezas_completo[i]);

                Paragraph codigo2 = new Paragraph(codigos_completo[i+1]);
                Paragraph modelo2 = new Paragraph(modelos_completo[i +1]);
                Paragraph tienda2 = new Paragraph("T - "+tienda_completo[i+1]);
                Paragraph caja2 = new Paragraph("P - "+piezas_completo[i+1]);
                
                Paragraph codigo3 = new Paragraph(codigos_completo[i+2]);
                Paragraph modelo3 = new Paragraph(modelos_completo[i +2]);
                Paragraph tienda3 = new Paragraph("T - "+tienda_completo[i+2]);
                Paragraph caja3 = new Paragraph("P - "+piezas_completo[i+2]);
    
                codigo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                modelo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                tienda.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                caja.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
    
                codigo2.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                modelo2.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                tienda2.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                caja2.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                
                codigo3.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                modelo3.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
                tienda3.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
                caja3.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
    
                codigo.setRelativePosition(0, 8, 0, 0);
                modelo.setRelativePosition(40, -3, 0, 0);
                tienda.setRelativePosition(0, 30, 0, 0);
                caja.setRelativePosition(0,60,0,0);
    
                codigo2.setRelativePosition(110f, -3, 0, 0);
                modelo2.setRelativePosition(150, -3, 0, 0);
                tienda2.setRelativePosition(105f, 30, 0, 0);
                caja2.setRelativePosition(105f,60,0,0);
                
                codigo3.setRelativePosition(220f, -3, 0, 0);
                modelo3.setRelativePosition(250, -3, 0, 0);
                tienda3.setRelativePosition(210f, 30, 0, 0);
                caja3.setRelativePosition(210f,60,0,0);
    
                document_3.add(codigo);
                document_3.add(modelo);
                document_3.add(tienda);
                document_3.add(caja);
    
                document_3.add(codigo2);
                document_3.add(modelo2);
                document_3.add(tienda2);
                document_3.add(caja2);
                
                document_3.add(codigo3);
                document_3.add(modelo3);
                document_3.add(tienda3);
                document_3.add(caja3);
                
                document_3.add(new AreaBreak(AreaBreakType.NEXT_PAGE));
                
            }
            

            Paragraph codigo = new Paragraph(codigos_completo[count-1]);
            Paragraph modelo = new Paragraph(modelos_completo[count-1]);
            Paragraph tienda = new Paragraph("T - "+tienda_completo[count-1]);
            Paragraph caja = new Paragraph("P - "+piezas_completo[count-1]);
            
            codigo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
            modelo.setFontSize(10).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
            tienda.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(-1);
            caja.setFontSize(25).setMargins(0,0,0,0).setBorder(Border.NO_BORDER).setMultipliedLeading(1);
            
            codigo.setRelativePosition(0, 8, 0, 0);
            modelo.setRelativePosition(40, -3, 0, 0);
            tienda.setRelativePosition(0, 30, 0, 0);
            caja.setRelativePosition(0,60,0,0);
            
            document_3.add(codigo);
            document_3.add(modelo);
            document_3.add(tienda);
            document_3.add(caja);
            
            document_3.close();
            
        }
    }
    

//****************************************************************************************
    
    
//****************************************************************************************

    if(this.chk_enbarque.isSelected())
    {
        
        con = conexion();
        //Statement ps;
        PreparedStatement ps ;
        ResultSet resultado = null;
        String[] nom_tiendas = new String[tiendas.length];
        for(int i = 0 ; i < tiendas.length;i++)
        {
           String sql = "SELECT  nombre_tienda FROM tiendas WHERE num_tienda = ?"  ;


            ps = con.prepareStatement(sql);
            ps.setInt(1, tiendas[i]);
            resultado = ps.executeQuery();
            
            resultado.next();
            
            nom_tiendas[i] =resultado.getString("nombre_tienda");
        }       
        con.close();

        PdfDocument pdf_2 = new PdfDocument(new PdfWriter( jTextField3.getText()+"_Etiqueta_10X15.pdf"));

        PdfFont font_general = PdfFontFactory.createFont(StandardFonts.HELVETICA_BOLD);
        PdfFont font_final = PdfFontFactory.createFont(StandardFonts.COURIER);


        Document document_2 = new Document(pdf_2,new PageSize(426,284));
        document_2.setMargins(0.0f, 0.0f, 0.0f, 0.0f);

        String cajass="";
        for(int i = 0 ; i <nom_tiendas.length;i++)
        {

            for(int j = 0; j< n_cajas[i];j++)
            {
               if(n_cajas[i] != 1)
               {
                   cajass = Integer.toString(j+1)+" / "+Integer.toString(n_cajas[i]);
               }
               else
               {
                   cajass ="1 / 1";
               }
                Paragraph fecha = new Paragraph("FECHA:         "+dtf.format(date) ).setFont(font_general).setFontSize(35).setMargin(0).setBorder(Border.NO_BORDER);
                fecha.setRelativePosition(5, -3, 0, 0);
                Paragraph pedido = new Paragraph("PEDIDO:       "+jTextField1.getText()).setFont(font_general).setFontSize(35).setMargin(0).setBorder(Border.NO_BORDER);
                pedido.setRelativePosition(5, -25, 0,10);
                Paragraph tienda = new Paragraph("TIENDA:             "+tiendas[i] ).setFont(font_general).setFontSize(35).setMargin(0).setBorder(Border.NO_BORDER);
                tienda.setRelativePosition(5, -42, 0, 0);
                Paragraph nom_tienda = new Paragraph("NOM.TIENDA:").setFont(font_general).setFontSize(26).setMargin(0).setBorder(Border.NO_BORDER);
                nom_tienda.setRelativePosition(5, -23, 0, 0);
                Paragraph depto = new Paragraph("DEPTO:     0282").setFont(font_general).setFontSize(35).setMargin(0).setBorder(Border.NO_BORDER);
                depto.setRelativePosition(5, 15, 0, 0).setFixedLeading(-25);
                Paragraph caja = new Paragraph("CAJA:       "+cajass).setFont(font_general).setFontSize(35).setMargin(0).setBorder(Border.NO_BORDER);
                caja.setRelativePosition(5, 35, 0, 0);
                Paragraph aviso = new Paragraph("AVISO AINTICIPADO DE EMBARQUE").setFont(font_final).setFontSize(24.8F).setMargin(0).setBorder(Border.NO_BORDER).setCharacterSpacing(-1);
                aviso.setRelativePosition(10F, 24, 1.5F, 0);
                Paragraph full_name = new Paragraph(nom_tiendas[i]).setFont(font_general).setFontSize(24).setMargin(0).setBorder(Border.NO_BORDER).setCharacterSpacing(-0.5f);
                full_name.setRelativePosition(0, 0, 0, 0).setFixedPosition(200,110,216).setFixedLeading(24);

                document_2.add(fecha);
                document_2.add(pedido);
                document_2.add(tienda);
                document_2.add(nom_tienda);
                document_2.add(depto);
                document_2.add(caja);
                document_2.add(aviso);
                document_2.add(full_name);
            }  
        }
        document_2.close();
        
    }

//****************************************************************************************
 
        this.jDateChooser1.setDate(null);
        this.jTextField1.setText("");
        this.jTextField2.setText("");
        this.jTextField3.setText("");
        this.chk_enbarque.setSelected(false);
        this.chk_pedido_1.setSelected(false);
        this.chk_pedido_2.setSelected(false);
        this.jButton1.setEnabled(false);
        this.jButton2.setEnabled(false);
        this.jButton3.setEnabled(false);
        this.jCalendar1.setEnabled(false);
        this.jDateChooser1.setEnabled(false);
        this.jTextField1.setEnabled(false);
        this.jTextField2.setEnabled(false);
        this.jTextField3.setEnabled(false);
        JOptionPane.showMessageDialog(null, "El archivo se a creado y guardado");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex, "ERROR",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      FileDialog dialog = new FileDialog(this, "Buscar Xlsx", FileDialog.SAVE);
      dialog.setFile("*.pdf");
      dialog.setVisible(true);
      String ruta = dialog.getDirectory() + dialog.getFile();
      jTextField3.setText(ruta);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.jButton1.setEnabled(false);
        this.jButton2.setEnabled(false);
        this.jButton3.setEnabled(false);
        this.jCalendar1.setEnabled(false);
        this.jDateChooser1.setEnabled(false);
        this.jTextField1.setEnabled(false);
        this.jTextField2.setEnabled(false);
        this.jTextField3.setEnabled(false);
    }//GEN-LAST:event_formWindowOpened

    private void chk_enbarqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_enbarqueActionPerformed
       if(this.chk_enbarque.isSelected())
       {
            this.jButton1.setEnabled(true);
            this.jButton2.setEnabled(true);
            this.jButton3.setEnabled(true);
            this.jCalendar1.setEnabled(true);
            this.jDateChooser1.setEnabled(true);
            this.jTextField1.setEnabled(true);
            this.jTextField2.setEnabled(true);
            this.jTextField3.setEnabled(true);
       }else{
        this.jButton1.setEnabled(false);
        this.jButton2.setEnabled(false);
        this.jButton3.setEnabled(false);
        this.jCalendar1.setEnabled(false);
        this.jDateChooser1.setEnabled(false);
        this.jTextField1.setEnabled(false);
        this.jTextField2.setEnabled(false);
        this.jTextField3.setEnabled(false);
       }
    }//GEN-LAST:event_chk_enbarqueActionPerformed

    private void chk_pedido_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_pedido_1ActionPerformed
       if(this.chk_pedido_1.isSelected())
       {
           this.chk_pedido_2.setSelected(false);
           this.jTextField2.setEnabled(true);
           this.jTextField3.setEnabled(true);
           this.jButton1.setEnabled(true);
           this.jButton2.setEnabled(true);
           this.jButton3.setEnabled(true);
       }else{
       
           this.jTextField2.setEnabled(false);
           this.jTextField3.setEnabled(false);
           this.jButton1.setEnabled(false);
           this.jButton2.setEnabled(false);
           this.jButton3.setEnabled(false);
       }
    }//GEN-LAST:event_chk_pedido_1ActionPerformed

    private void chk_pedido_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_pedido_2ActionPerformed
        if(this.chk_pedido_2.isSelected())
       {
           this.chk_pedido_1.setSelected(false);
           this.jTextField2.setEnabled(true);
           this.jTextField3.setEnabled(true);
           this.jButton1.setEnabled(true);
           this.jButton2.setEnabled(true);
           this.jButton3.setEnabled(true);
       }else{
       
           this.jTextField2.setEnabled(false);
           this.jTextField3.setEnabled(false);
           this.jButton1.setEnabled(false);
           this.jButton2.setEnabled(false);
           this.jButton3.setEnabled(false);
       }
    }//GEN-LAST:event_chk_pedido_2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chk_enbarque;
    private javax.swing.JCheckBox chk_pedido_1;
    private javax.swing.JCheckBox chk_pedido_2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private com.toedter.calendar.JCalendar jCalendar1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
